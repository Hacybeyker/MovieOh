name: Android Publish

on:
  push:
    branches:
      - 'master'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      REPO_USERID: ${{ secrets.REPO_USERID }}
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      LOCAL_PROPERTIES_KEY_PROD: ${{ secrets.LOCAL_PROPERTIES_KEY_PROD }}
      LOCAL_PROPERTIES_KEY_QA: ${{ secrets.LOCAL_PROPERTIES_KEY_QA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Git Submodule
        uses: ./.github/workflows/submodule-action

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Set LocalProperties
        run: |
          echo KEY_PROD=$LOCAL_PROPERTIES_KEY_PROD >> local.properties
          echo KEY_QA=$LOCAL_PROPERTIES_KEY_QA >> local.properties

      - name: Run Lint
        run: ./gradlew app:lintDebug

      - name: Upload Lint Test Report
        uses: actions/upload-artifact@v2
        with:
          name: lint_report
          path: app/build/reports/lint-results-debug.html

      - name: Run KtLintCheck
        run: ./gradlew app:ktlintCheck

      - name: Run Detekt
        run: ./gradlew app:detekt

      - name: Upload Detekt Report
        uses: actions/upload-artifact@v2
        with:
          name: detekt_report
          path: app/build/reports/detekt

  unit-test:
    name: Unit Test
    needs: [ lint ]
    runs-on: ubuntu-latest
    env:
      REPO_USERID: ${{ secrets.REPO_USERID }}
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      LOCAL_PROPERTIES_KEY_PROD: ${{ secrets.LOCAL_PROPERTIES_KEY_PROD }}
      LOCAL_PROPERTIES_KEY_QA: ${{ secrets.LOCAL_PROPERTIES_KEY_QA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Git Submodule
        uses: ./.github/workflows/submodule-action

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Set LocalProperties
        run: |
          echo KEY_PROD=$LOCAL_PROPERTIES_KEY_PROD >> local.properties
          echo KEY_QA=$LOCAL_PROPERTIES_KEY_QA >> local.properties

      - name: Run Tests
        run: ./gradlew app:testDebugUnitTest

      - name: Upload Test Report
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  jacoco:
    name: Coverage Test
    needs: [ unit-test ]
    runs-on: ubuntu-latest
    env:
      REPO_USERID: ${{ secrets.REPO_USERID }}
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      LOCAL_PROPERTIES_KEY_PROD: ${{ secrets.LOCAL_PROPERTIES_KEY_PROD }}
      LOCAL_PROPERTIES_KEY_QA: ${{ secrets.LOCAL_PROPERTIES_KEY_QA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Git Submodule
        uses: ./.github/workflows/submodule-action

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Set LocalProperties
        run: |
          echo KEY_PROD=$LOCAL_PROPERTIES_KEY_PROD >> local.properties
          echo KEY_QA=$LOCAL_PROPERTIES_KEY_QA >> local.properties

      - name: Run Jacoco Test Report
        run: ./gradlew app:jacocoTestReport

      - name: Upload coverage test report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco_test_report
          path: app/build/reports/jacoco/jacocoTestReport/

      - name: Run Jacoco Test Coverage Verification
        run: ./gradlew app:jacocoTestCoverageVerification

  sonarqube:
    name: Analysis Code
    needs: [ jacoco ]
    runs-on: ubuntu-latest
    env:
      REPO_USERID: ${{ secrets.REPO_USERID }}
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      LOCAL_PROPERTIES_KEY_PROD: ${{ secrets.LOCAL_PROPERTIES_KEY_PROD }}
      LOCAL_PROPERTIES_KEY_QA: ${{ secrets.LOCAL_PROPERTIES_KEY_QA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Git Submodule
        uses: ./.github/workflows/submodule-action

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Set LocalProperties
        run: |
          echo KEY_PROD=$LOCAL_PROPERTIES_KEY_PROD >> local.properties
          echo KEY_QA=$LOCAL_PROPERTIES_KEY_QA >> local.properties

      - name: Run Lint
        run: ./gradlew app:lintDebug

      - name: Run KtLintCheck
        run: ./gradlew app:ktlintCheck

      - name: Run Detekt
        run: ./gradlew app:detekt

      - name: Run Tests
        run: ./gradlew app:testDebugUnitTest

      - name: Run Jacoco Test Report
        run: ./gradlew app:jacocoTestReport

      - name: Run SonarQube Scan
        run: ./gradlew app:sonarqube -Dsonar.host.url=https://sonarcloud.io/ -Dsonar.login=${{ secrets.SONARCLOUDTOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    env:
      SIGNING_KEY_ALIAS_MOVIEOH: ${{ secrets.SIGNING_KEY_ALIAS_MOVIEOH }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Git Submodule
        uses: ./.github/workflows/submodule-action

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Set LocalProperties
        run: |
          echo KEY_PROD=$LOCAL_PROPERTIES_KEY_PROD >> local.properties
          echo KEY_QA=$LOCAL_PROPERTIES_KEY_QA >> local.properties

      - name: Signing App Release
        run: |
          ./gradlew app:bundleRelease
          ./gradlew app:assembleRelease

      - name: Upload Artifact APK Release
        uses: actions/upload-artifact@v2
        with:
          name: apk-release
          path: ./app/build/outputs/apk/release

      - name: Upload Artifact Bundle Release
        uses: actions/upload-artifact@v2
        with:
          name: apk-bundle-release
          path: ./app/build/outputs/bundle/release

      - name: Create Tag Release
        run: |
          currentVersion=`grep versionName ./buildSrc/src/main/kotlin/Configuration.kt | awk -F" " '{ print $5 }' `
          currentFormattedVersion=`echo $currentVersion | sed 's/.\(.*\)/\1/' | sed 's/\(.*\)./\1/'`
          echo "Version: $currentFormattedVersion"
          git tag $currentFormattedVersion
          git push origin --tags

      - name: Deploy to Alpha
        uses: r0adkll/upload-google-play@v1.0.17
        with:
          serviceAccountJsonPlainText: ${{ secrets.SIGNING_SERVICE_ACCOUNT }}
          packageName: com.hacybeyker.movieoh
          releaseFiles: ./app/build/outputs/bundle/release/app-release.aab
          track: alpha